<?xml version="1.0"?>

<robot name="differential_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- ########################## -->
    <!--   Geometry and constants   -->
    <!-- ########################## -->

    <!-- Pi -->
    <xacro:property name="pi_const" value="3.14159265" />

    <!-- Body Dimensions -->
    <xacro:property name="a" value="0.18" />
    <xacro:property name="b" value="0.06" />
    <xacro:property name="c" value="0.13" />

    <!-- Wheel and caster radius -->
    <xacro:property name="r" value="0.04" />

    <!-- Wheel width -->
    <xacro:property name="d" value="0.01" />

    <xacro:property name="s1" value="${r}" />
    <xacro:property name="s2" value="${a/2.0-r/2.0}" />
    <xacro:property name="s3" value="${a/2.0-r}" />
    <xacro:property name="s4" value="${c/2.0+d/2.0}" />

    <!-- ########################## -->
    <!--      Mass and inertia      -->
    <!-- ########################## -->

    <!-- Material Density -->
    <!-- body -->
    <xacro:property name="d1" value="1430.0" />
    <!-- wheel -->
    <xacro:property name="d2" value="1430.0" />
    <!-- caster -->
    <xacro:property name="d3" value="1430.0" />

    <!-- Mass -->
    <!-- body cuboid-->
    <xacro:property name="m1" value="${d1*a*b*c}" />
    <!-- wheel cylinder-->
    <xacro:property name="m2" value="${d2*pi_const*r*r*d}" />
    <!-- caster sphere -->
    <xacro:property name="m3" value="${d3*(4.0/3.0)*pi_const*r*r*r}" />

    <!-- Inertia -->
    <!-- body cuboid-->
    <xacro:property name="Ix_body" value="${(1.0/12.0)*m1*(b*b+c*c)}" />
    <xacro:property name="Iy_body" value="${(1.0/12.0)*m1*(a*a+b*b)}" />
    <xacro:property name="Iz_body" value="${(1.0/12.0)*m1*(a*a+c*c)}" />
    <!-- wheel cylinder-->
    <xacro:property name="Iz_wheel" value="${0.5*m2*r*r}" />
    <xacro:property name="I_wheel" value="${(1.0/12.0)*m2*(3.0*r*r+d*d)}" />
    <!-- caster sphere -->
    <xacro:property name="I_caster" value="${(2.0/5.0)*m3*r*r}" />

    <!-- Complete inertia -->
    <!-- body cuboid-->
    <xacro:macro name="inertia_body">
        <inertial>
            <!-- Displacement and orientation of the center of the mass frame of the link with respect to parent coordinate system -->
            <origin rpy="0 0 0" xyz="0 0 ${s1}"/>
            <mass value="${m1}"/>
            <inertia ixx="${Ix_body}" ixy="0.0" ixz="0.0" iyy="${Iy_body}" iyz="0.0" izz="${Iz_body}" />
        </inertial>
    </xacro:macro>

    <!-- wheel cylinder-->
    <xacro:macro name="inertia_wheel">
        <inertial>
            <!-- Displacement and orientation of the center of the mass frame of the link with respect to parent coordinate system -->
            <origin rpy="${pi_const/2.0} 0 0" xyz="0 0 0"/> <!-- rpy in radiants -->
            <mass value="${m2}"/>
            <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0.0" izz="${Iz_wheel}" />
        </inertial>
    </xacro:macro>

    <!-- caster sphere -->
    <xacro:macro name="inertia_caster">
        <inertial>
            <!-- Displacement and orientation of the center of the mass frame of the link with respect to parent coordinate system -->
            <origin rpy="0 0 0" xyz="0 0 0"/> <!-- rpy in radiants -->
            <mass value="${m3}"/>
            <inertia ixx="${I_caster}" ixy="0.0" ixz="0.0" iyy="${I_caster}" iyz="0.0" izz="${I_caster}" />
        </inertial>
    </xacro:macro>

    <!-- ########################## -->
    <!--  Include additional files  -->
    <!-- ########################## -->

    <!-- Gazebo file for extra Gazebo options and motion driver-->
    <xacro:include filename="$(find simple_diff_drive_sim)/model/robot.gazebo" />

    <!-- ########################## -->
    <!--  Define links and joints   -->
    <!-- ########################## -->

    <!-- Fictious link of the robot - we need to have this link otherwise Gazebo will complain -->
    <link name="base_footprint"> </link>
    <joint name="body_link_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="body_link"/>
    </joint>

    <!-- Body link of the robot -->
    <link name="body_link">

        <visual>
            <geometry>
                <box size="${a} ${c} ${b}" />
            </geometry>
            <!-- Displacement and orientation of the geometric center of the link with respec to the parent link -->
            <origin rpy="0 0 0" xyz="0 0 ${s1}"/>
        </visual>

        <collision>
            <geometry>
                <box size="${a} ${c} ${b}" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 ${s1}"/>
        </collision>

        <xacro:inertia_body/>

    </link>

    <!-- Wheel1 of the robot -->

    <joint name="wheel1_joint" type="continuous" >
        <parent link="body_link"/>
        <child link="wheel1_link"/>
        <origin xyz="${-s2} ${-s4} ${r}" rpy="0 0 0" />
        <axis xyz="0 1 0"/>
        <limit effort="50000" velocity="10"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel1_link">
        <visual>
            <origin rpy="${pi_const/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${d}" radius="${r}"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="${pi_const/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${d}" radius="${r}"/>
            </geometry>
        </collision>

        <xacro:inertia_wheel/>

    </link>

    <!-- Wheel2 of the robot -->

    <joint name="wheel2_joint" type="continuous" >
        <parent link="body_link"/>
        <child link="wheel2_link"/>
        <origin xyz="${-s2} ${s4} ${r}" rpy="0 0 0" />
        <axis xyz="0 1 0"/>
        <limit effort="50000" velocity="10"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="wheel2_link">
        <visual>
            <origin rpy="${pi_const/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${d}" radius="${r}"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="${pi_const/2} 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${d}" radius="${r}"/>
            </geometry>
        </collision>

        <xacro:inertia_wheel/>

    </link>

    <!-- Caster wheel of the robot -->

    <joint name="caster_joint" type="fixed" >
        <parent link="body_link"/>
        <child link="caster_link"/>
        <origin xyz="${s3} 0 ${r}" rpy="0 0 0" />
    </joint>

    <link name="caster_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <sphere radius="${r}"/>
            </geometry>
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <sphere radius="${r}"/>
            </geometry>
        </collision>

        <xacro:inertia_caster/>

    </link>


</robot>